{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/CodeEditor.svelte","../../src/components/Tabbar.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/intl-messageformat-parser/lib/types.js","../../node_modules/intl-messageformat-parser/lib/parser.js","../../node_modules/intl-messageformat-parser/lib/normalize.js","../../node_modules/intl-messageformat-parser/lib/skeleton.js","../../node_modules/intl-messageformat-parser/lib/index.js","../../node_modules/intl-format-cache/lib/index.js","../../node_modules/intl-messageformat/lib/formatters.js","../../node_modules/intl-messageformat/lib/core.js","../../node_modules/svelte-i18n/dist/runtime.esm.js","../../src/components/DevPanel.svelte","../../src/utils/linkHighlighter.js","../../src/components/TextEditor.svelte","../../src/components/Editor.svelte","../../src/utils/file.js","../../src/components/Navbar.svelte","../../src/store/book.js","../../src/utils/xlgcParser.js","../../src/components/Sidemenu.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","<script>\n  import { onMount, tick } from 'svelte'\n\n  export let foreground = false\n  const fontSize = '18px'\n  let editor = null\n\n  onMount(async () => {\n    await tick()\n    editor = ace.edit(\"code-editor\");\n    editor.setOptions({\n      fontSize,\n      tabSize: 2, useSoftTabs: true,\n    });\n    editor.setTheme(\"ace/theme/xcode\");\n    editor.session.setMode(\"ace/mode/javascript\");\n  })\n\n  \n  $: if(foreground && editor){ editor.focus() }\n</script>\n\n<div id=\"code-editor\" style={`font-size:${fontSize}; ${(foreground ? 'z-index: 2000;' : '')}`}>\n  ddvdsfv\n</div>\n","<script>\n\nexport let tabs = {\n  'london' : 'London',\n  'to'     : 'To',\n  'paris'  : 'Paris'\n}\n\nexport let active = Object.keys(tabs)[0]\nexport let expandable = false\n</script>\n\n<div class=\"tab\">\n  {#each Object.entries(tabs) as [key, label]}\n    <button\n    class={'tablinks' + (key === active ? ' active' : '')}\n    on:click={ () => active = key}\n    >{label}</button>\n  {/each}\n</div>\n\n<style>\n.tab {\n  overflow: hidden;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1;\n}\n\n/* Style the buttons inside the tab */\n.tab button {\n  background-color: inherit;\n  float: left;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: 0.9rem;\n  padding: 10px 0.9rem;\n  transition: 0.3s;\n}\n\n/* Change background color of buttons on hover */\n.tab button:hover {\n  background-color: #ddd;\n}\n\n/* Create an active/current tablink class */\n.tab button.active {\n  background-color: #ccc;\n}\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = \"#\";\n    var peg$c3 = peg$literalExpectation(\"#\", false);\n    var peg$c4 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c5 = peg$otherExpectation(\"argumentElement\");\n    var peg$c6 = \"{\";\n    var peg$c7 = peg$literalExpectation(\"{\", false);\n    var peg$c8 = \"}\";\n    var peg$c9 = peg$literalExpectation(\"}\", false);\n    var peg$c10 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c12 = /^['\\/{}]/;\n    var peg$c13 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c14 = peg$anyExpectation();\n    var peg$c15 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c16 = \"/\";\n    var peg$c17 = peg$literalExpectation(\"/\", false);\n    var peg$c18 = function (option) { return option; };\n    var peg$c19 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c20 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c21 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c22 = \"::\";\n    var peg$c23 = peg$literalExpectation(\"::\", false);\n    var peg$c24 = function (skeleton) { return skeleton; };\n    var peg$c25 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c26 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c27 = \",\";\n    var peg$c28 = peg$literalExpectation(\",\", false);\n    var peg$c29 = \"number\";\n    var peg$c30 = peg$literalExpectation(\"number\", false);\n    var peg$c31 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c32 = \"'\";\n    var peg$c33 = peg$literalExpectation(\"'\", false);\n    var peg$c34 = /^[^']/;\n    var peg$c35 = peg$classExpectation([\"'\"], true, false);\n    var peg$c36 = /^[^a-zA-Z'{}]/;\n    var peg$c37 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c38 = /^[a-zA-Z]/;\n    var peg$c39 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c40 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c41 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c42 = \"date\";\n    var peg$c43 = peg$literalExpectation(\"date\", false);\n    var peg$c44 = \"time\";\n    var peg$c45 = peg$literalExpectation(\"time\", false);\n    var peg$c46 = \"plural\";\n    var peg$c47 = peg$literalExpectation(\"plural\", false);\n    var peg$c48 = \"selectordinal\";\n    var peg$c49 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c50 = \"offset:\";\n    var peg$c51 = peg$literalExpectation(\"offset:\", false);\n    var peg$c52 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c53 = \"select\";\n    var peg$c54 = peg$literalExpectation(\"select\", false);\n    var peg$c55 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c56 = \"=\";\n    var peg$c57 = peg$literalExpectation(\"=\", false);\n    var peg$c58 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c59 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c60 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c61 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c62 = peg$otherExpectation(\"whitespace\");\n    var peg$c63 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c64 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c65 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c66 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c67 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c68 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c69 = peg$otherExpectation(\"number\");\n    var peg$c70 = \"-\";\n    var peg$c71 = peg$literalExpectation(\"-\", false);\n    var peg$c72 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c73 = peg$otherExpectation(\"apostrophe\");\n    var peg$c74 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c75 = \"''\";\n    var peg$c76 = peg$literalExpectation(\"''\", false);\n    var peg$c77 = function () { return \"'\"; };\n    var peg$c78 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c79 = function (x) {\n        return (x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c80 = \"\\n\";\n    var peg$c81 = peg$literalExpectation(\"\\n\", false);\n    var peg$c82 = function (x) {\n        return x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c83 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c84 = peg$otherExpectation(\"argNumber\");\n    var peg$c85 = \"0\";\n    var peg$c86 = peg$literalExpectation(\"0\", false);\n    var peg$c87 = function () { return 0; };\n    var peg$c88 = /^[1-9]/;\n    var peg$c89 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c90 = /^[0-9]/;\n    var peg$c91 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c92 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c93 = peg$otherExpectation(\"argName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parsepoundElement();\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c2;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c3);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c8;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c9);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c10(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c12.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c13);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c14);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c12.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c13);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c16;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c17);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c18(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c15);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c20(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c19);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c21(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n            s1 = peg$c22;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c25();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c29) {\n                                    s7 = peg$c29;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c30);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c8;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c9);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c31(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c34.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c35);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c34.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c35);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c32;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c33);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c36.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c37);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c36.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c37);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c38.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c38.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c39);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c40(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n            s1 = peg$c22;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c42) {\n                                    s7 = peg$c42;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c43);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c44) {\n                                        s7 = peg$c44;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c45);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c8;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c9);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c31(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c46) {\n                                    s7 = peg$c46;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c47);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c48) {\n                                        s7 = peg$c48;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c49);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c50) {\n                                                    s12 = peg$c50;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c51);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c8;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c9);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c52(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c53) {\n                                    s7 = peg$c53;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c54);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c8;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c9);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c55(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c6;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c7);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c58(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c8;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c9);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c59(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c6;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c7);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c60(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c8;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c9);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c61(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c63.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c64);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c67);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c65);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c70;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c71);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c72(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c75) {\n            s1 = peg$c75;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c76);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c77();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c74);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c75) {\n                    s5 = peg$c75;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c76);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c34.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c35);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c75) {\n                        s5 = peg$c75;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c76);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c34.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c35);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c32;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c33);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c78(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c79(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c80;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c81);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c82(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c85;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c88.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c89);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c90.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c91);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c90.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c91);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c92(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c14);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c93);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\+|#+)?)?$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (match, g1, g2) {\n                // precision-integer case\n                if (match === '.') {\n                    result.maximumFractionDigits = 0;\n                }\n                // .000+ case\n                else if (g2 === '+') {\n                    result.minimumFractionDigits = g2.length;\n                }\n                // .### case\n                else if (g1[0] === '#') {\n                    result.maximumFractionDigits = g1.length;\n                }\n                // .00## or .000 case\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits =\n                        g1.length + (typeof g2 === 'string' ? g2.length : 0);\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","import { pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport * from './skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, __spreadArrays([void 0], args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, } from 'intl-messageformat-parser';\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n];\nfunction formatHTMLElement(el, objectParts, values) {\n    var tagName = el.tagName;\n    var outerHTML = el.outerHTML, textContent = el.textContent, childNodes = el.childNodes;\n    // Regular text\n    if (!tagName) {\n        return restoreRichPlaceholderMessage(textContent || '', objectParts);\n    }\n    tagName = tagName.toLowerCase();\n    var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n    var formatFnOrValue = values[tagName];\n    if (formatFnOrValue && isVoidElement) {\n        throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n    }\n    if (!childNodes.length) {\n        return [outerHTML];\n    }\n    var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n        return all.concat(formatHTMLElement(child, objectParts, values));\n    }, []);\n    // Legacy HTML\n    if (!formatFnOrValue) {\n        return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n    }\n    // HTML Tag replacement\n    if (typeof formatFnOrValue === 'function') {\n        return [formatFnOrValue.apply(void 0, chunks)];\n    }\n    return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    var content = domParser\n        .parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html')\n        .getElementById(TEMPLATE_ID);\n    if (!content) {\n        throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!content.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var caseSensitiveTags = tagsToFormat.filter(function (tagName) { return tagName !== tagName.toLowerCase(); });\n    if (caseSensitiveTags.length) {\n        throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n    }\n    // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n    return Array.prototype.slice\n        .call(content.childNodes)\n        .reduce(function (all, child) { return all.concat(formatHTMLElement(child, objectParts, values)); }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { parse } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatHTMLMessage, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.formatHTMLMessage = function (values) {\n            return formatHTMLMessage(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    IntlMessageFormat.defaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","import{writable as n,derived as e}from\"svelte/store\";import t from\"intl-messageformat\";const o=(n,e=\"\")=>{const t={};for(const r in n){const i=e+r;\"object\"==typeof n[r]?Object.assign(t,o(n[r],`${i}.`)):t[i]=n[r]}return t};let r;const i=n({});function a(n){return n in r}function l(n,e){if(a(n)){const t=function(n){return r[n]||null}(n);if(e in t)return t[e]}return null}function s(n,...e){const t=e.map(n=>o(n));i.update(e=>(e[n]=Object.assign(e[n]||{},...t),e))}const c=e([i],([n])=>Object.keys(n));i.subscribe(n=>r=n);const u=n(!1);\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */function m(n,e){var t={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&e.indexOf(o)<0&&(t[o]=n[o]);if(null!=n&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)e.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(t[o[r]]=n[o[r]])}return t}const f={fallbackLocale:null,initialLocale:null,loadingDelay:200,formats:{number:{scientific:{notation:\"scientific\"},engineering:{notation:\"engineering\"},compactLong:{notation:\"compact\",compactDisplay:\"long\"},compactShort:{notation:\"compact\",compactDisplay:\"short\"}},date:{short:{month:\"numeric\",day:\"numeric\",year:\"2-digit\"},medium:{month:\"short\",day:\"numeric\",year:\"numeric\"},long:{month:\"long\",day:\"numeric\",year:\"numeric\"},full:{weekday:\"long\",month:\"long\",day:\"numeric\",year:\"numeric\"}},time:{short:{hour:\"numeric\",minute:\"numeric\"},medium:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\"},long:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"},full:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"}}},warnOnMissingMessages:!0};function d(){return f}function w(n){const{formats:e}=n,t=m(n,[\"formats\"]),o=n.initialLocale||n.fallbackLocale;return Object.assign(f,t,{initialLocale:o}),e&&(\"number\"in e&&Object.assign(f.formats.number,e.number),\"date\"in e&&Object.assign(f.formats.date,e.date),\"time\"in e&&Object.assign(f.formats.time,e.time)),j.set(o)}const g={};function b(n){return g[n]}function p(n){return E(n).reverse().some(b)}const h={};function y(n){if(!p(n))return;if(n in h)return h[n];const e=function(n){return E(n).reverse().map(n=>{const e=b(n);return[n,e?[...e]:[]]}).filter(([,n])=>n.length>0)}(n);if(0===e.length)return;const t=setTimeout(()=>u.set(!0),d().loadingDelay);return h[n]=Promise.all(e.map(([n,e])=>Promise.all(e.map(n=>n())).then(e=>{!function(n){delete g[n]}(n),e=e.map(n=>n.default||n),s(n,...e)}))).then(()=>{clearTimeout(t),u.set(!1),delete h[n]}),h[n]}function O(n,e){b(n)||function(n){g[n]=new Set}(n);const t=b(n);b(n).has(e)||(a(n)||i.update(e=>(e[n]={},e)),t.add(e))}let v;const j=n(null);function L(n,e){return 0===e.indexOf(n)&&n!==e}function k(n,e){return n===e||L(n,e)||L(e,n)}function x(n){const e=n.lastIndexOf(\"-\");if(e>0)return n.slice(0,e);const{fallbackLocale:t}=d();return t&&!k(n,t)?t:null}function E(n){const e=n.split(\"-\").map((n,e,t)=>t.slice(0,e+1).join(\"-\")),{fallbackLocale:t}=d();return t&&!k(n,t)?e.concat(E(t)):e}function $(){return v}j.subscribe(n=>{v=n,\"undefined\"!=typeof window&&document.documentElement.setAttribute(\"lang\",n)});const D=j.set;j.set=n=>function n(e){return null==e||a(e)?e:n(x(e))}(n)&&p(n)?y(n).then(()=>D(n)):D(n),j.update=n=>D(n(v));const I=(n,e)=>{const t=n.split(\"&\").find(n=>0===n.indexOf(`${e}=`));return t?t.split(\"=\").pop():null},N=(n,e)=>{const t=e.exec(n);return t&&t[1]||null},P=n=>\"undefined\"==typeof window?null:N(window.location.hostname,n),S=n=>\"undefined\"==typeof window?null:N(window.location.pathname,n),T=()=>\"undefined\"==typeof window?null:window.navigator.language||window.navigator.languages[0],A=n=>\"undefined\"==typeof window?null:I(window.location.search.substr(1),n),M=n=>\"undefined\"==typeof window?null:I(window.location.hash.substr(1),n),F={},Z=(n,e)=>{if(null==e)return null;const t=l(e,n);return t||Z(n,x(e))},C=(n,e)=>{if(e in F&&n in F[e])return F[e][n];const t=Z(n,e);return t?((n,e,t)=>t?(e in F||(F[e]={}),n in F[e]||(F[e][n]=t),t):t)(n,e,t):null},J=n=>{const e=Object.create(null);return t=>{const o=JSON.stringify(t);return o in e?e[o]:e[o]=n(t)}},U=(n,e)=>{const t=d().formats;if(n in t&&e in t[n])return t[n][e];throw new Error(`[svelte-i18n] Unknown \"${e}\" ${n} format.`)},_=J(n=>{var{locale:e,format:t}=n,o=m(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format numbers');return t&&(o=U(\"number\",t)),new Intl.NumberFormat(e,o)}),q=J(n=>{var{locale:e,format:t}=n,o=m(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format dates');return t?o=U(\"date\",t):0===Object.keys(o).length&&(o=U(\"date\",\"short\")),new Intl.DateTimeFormat(e,o)}),z=J(n=>{var{locale:e,format:t}=n,o=m(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format time values');return t?o=U(\"time\",t):0===Object.keys(o).length&&(o=U(\"time\",\"short\")),new Intl.DateTimeFormat(e,o)}),B=(n={})=>{var{locale:e=$()}=n,t=m(n,[\"locale\"]);return _(Object.assign({locale:e},t))},G=(n={})=>{var{locale:e=$()}=n,t=m(n,[\"locale\"]);return q(Object.assign({locale:e},t))},H=(n={})=>{var{locale:e=$()}=n,t=m(n,[\"locale\"]);return z(Object.assign({locale:e},t))},K=J((n,e=$())=>new t(n,e,d().formats)),Q=(n,e={})=>{\"object\"==typeof n&&(n=(e=n).id);const{values:t,locale:o=$(),default:r}=e;if(null==o)throw new Error(\"[svelte-i18n] Cannot format a message without first setting the initial locale.\");const i=C(n,o);return i?t?K(i,o).format(t):i:(d().warnOnMissingMessages&&console.warn(`[svelte-i18n] The message \"${n}\" was not found in \"${E(o).join('\", \"')}\".${p($())?\"\\n\\nNote: there are at least one loader still registered to this locale that wasn't executed.\":\"\"}`),r||n)},R=(n,e)=>H(e).format(n),V=(n,e)=>G(e).format(n),W=(n,e)=>B(e).format(n),X=e([j,i],()=>Q),Y=e([j],()=>R),nn=e([j],()=>V),en=e([j],()=>W);function tn(n){return n}function on(n){return y(n||$()||d().initialLocale)}export{X as _,s as addMessages,nn as date,tn as defineMessages,i as dictionary,X as format,G as getDateFormatter,M as getLocaleFromHash,P as getLocaleFromHostname,T as getLocaleFromNavigator,S as getLocaleFromPathname,A as getLocaleFromQueryString,K as getMessageFormatter,B as getNumberFormatter,H as getTimeFormatter,w as init,u as isLoading,j as locale,c as locales,en as number,O as register,X as t,Y as time,on as waitLocale};\n","<script>\n  import Tabbar from './Tabbar.svelte'\n  import {onMount, tick} from 'svelte'\n  import { _ } from 'svelte-i18n'\n  import itemplate from '../emulator/template.htm'\n\n  let iframe = null\n  const refreshIFrame = () => {\n    iframe.contentDocument.open()\n    iframe.contentDocument.write( itemplate)\n    iframe.contentDocument.close()\n\n  }\n\n  onMount( () => {\n    refreshIFrame()\n  })\n\n  const tabs = {\n    emulator: 'Emulator',\n    status: 'Status',\n    console: 'Console'\n  }\n</script>\n<section class=\"devpanel\">\n  <Tabbar {tabs}/>\n\n  <iframe title=\"emulator\" bind:this={iframe}/>\n</section>\n\n\n<style>\n:global(.devpanel iframe){\n    margin-top: 40px;\n    width: 225px;\n    height: 400px;\n    border: 1px #ddd solid;\n    box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.25);\n    box-sizing: border-box;\n    margin-left: calc((100% - 225px)/ 2);\n}\n\nsection{\n  flex-grow: 1;\n  flex-basis: 0;\n}\n</style>\n","/* Quill LinkHighlighter\nEstensione dell'editor di testo quill che consente di evidenziare\nautomaticamente i link fra i paragrafi.\nRiconosce il \"vecchio\" formato link {link numero:testo}\n\nUso:\nimport LinkHighlighter from './linkHighlighter.js'\n\n// Inizializza passando la referenza a Quill\nconst linkHighlighter = new LinkHighlighter(Quill)\n\nlinkHighlighter.highlight(editor, enable = true) // Tro\nlinkHighlighter.startHighlighting(editor)        // Inizia a controllare\n\n*/\n\n//\nexport default function(Quill, clickHandler){\n  // Ridefinisce l'oggetto link\n  class Link extends Quill.import('blots/inline') {\n    static create() {\n      let node = super.create();\n      // Aggiunge l'handler quando il link viene cliccato\n      node.addEventListener(\"click\", function(){\n        const [number, title] = this.childNodes[0].nodeValue.split(':')\n        clickHandler(number.substring(6), title.substring(0, title.length - 1))\n      })\n      node.setAttribute('href', '#');\n      return node;\n    }\n    static formats(domNode) { return '' }\n    formatAt(index, length, name, value) {} // Previene grassetto/corsivo\n  }\n  // Registra l'oggetto Link in modo che sovrascriva quello usuale\n  Link.blotName = 'link';\n  Link.tagName = 'A';\n  Quill.register('formats/link', Link);\n\n  // Evidenzia/Toglie i link nel testo\n  const highlight = (editor, on = true) => {\n    if(on){\n      const text  = editor.getText()\n      let lastSearchedIndex = 0\n      // Formatta tutte le stringhe che corrispondono a {link parola:parola}\n      ;(text.match(/\\{link \\w+:(\\w|@)+\\}/g) || []).forEach( (match) => {\n        const index = text.indexOf(match, lastSearchedIndex)\n        lastSearchedIndex = index + match.length - 1\n        // Applica il link\n        editor.formatText(index, match.length,'link', true);\n      })\n    }else{\n      // Rimuove tutti i link dall'inizio alla fine\n      editor.formatText(0, editor.getText().length,'link', false);\n    }\n  }\n\n  // Azioni da eseguire a ogni update del testo\n  const onTextUpdate = function(delta, oldDelta, source) {\n    if (source == 'user'){\n      highlight(editor, false)\n      highlight(editor, true)\n    }\n  }\n\n\n  this.highlight = highlight\n  this.startHighlighting = (editor) => editor.on('text-change', onTextUpdate)\n  this.stopHighlighting  = (editor) => editor.off('text-change', onTextUpdate)\n\n}\n","<script>\n  import { onMount, tick } from 'svelte'\n  import LinkHighlighter from '../utils/linkHighlighter.js'\n\n  export let foreground = false\n  let editor =null\n\n  const linkHighlighter = new LinkHighlighter(Quill, (number,value) => {\n    console.log(`a${number}bc${value}d`)\n  })\n  window.linkHighlighter = linkHighlighter\n  onMount(async () => {\n    await tick()\n\n    hljs.configure({languages: ['xml']})\n    editor = new window.Quill('#text-editor', {\n      modules: {\n        syntax: true,              // Include syntax module\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n            [{ 'color': [] }, { 'background': [] }],\n            [{ 'font': [] }],\n            [{ 'align': [] }],\n            ['clean', 'code-block', 'link']\n        ]  // Include button in toolbar\n      },\n      theme: 'snow'\n    })\n    window.editor = editor\n\n    window.quillGetHTML = function() {\n      const inputDelta = editor.getContents()\n      var tempQuill=new Quill(document.createElement(\"div\"));\n      tempQuill.setContents(inputDelta);\n      return tempQuill.root.innerHTML;\n    }\n\n\n  })\n\n  $: if(foreground && editor){ editor.focus() }\n</script>\n\n<div class=\"editor-container\" style={foreground ? 'z-index: 2000;' : ''}>\n  <div id=\"text-editor\">\n    <p>Hello World!</p>\n    <p>{'{link 10:2}'} ssdsfsvfsv</p>\n    <pre>cdscdsds</pre>\n  </div>\n</div>\n","<script>\nimport Tabbar     from './Tabbar.svelte'\nimport TextEditor from './TextEditor.svelte'\nimport CodeEditor from './CodeEditor.svelte'\n\n  const tabs = {\n    \"esp1\" : \"CodeEditor\",\n    \"esp2\" : \"TextEditor\"\n  }\n\n  let active='esp2'\n</script>\n\n<section class=\"editor\">\n  <Tabbar {tabs} bind:active={active}/>\n  <TextEditor foreground={active === 'esp2'}/>\n  <CodeEditor foreground={active === 'esp1'}/>\n</section>\n\n<style>\n:global(section.editor){\n  flex-grow: 2;\n  flex-basis: 0;\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: auto 1fr;\n}\n:global(.editor-container){\n  display: flex;\n  flex-direction: column;\n}\n\n:global(#text-editor){\n  height: auto !important;\n  overflow-y: hidden;\n  flex-grow: 1;\n  flex-basis: 0;\n}\n\n:global(#code-editor, .editor-container){\n  grid-area: 2 / 1;\n  background-color: #fff;\n}\n</style>\n","\n\n// Download file\nconst download = (filename, text) => {\n\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/xml;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\n\nexport {download}\n","<script>\nimport { _ } from 'svelte-i18n'\nimport { download } from '../utils/file.js'\n\nlet navbar = {\n  'file' : {\n    'new'  : {type: 'button', handler: null},\n    'open' : {type: 'fileinput', accept: \".xlgc\", handler: (r) => console.log(r)},\n    'save' : {type: 'button', handler: download},\n  },\n  'edit' : {\n    'link1' : {type: 'button', handler: null},\n    'link2' : {type: 'button', handler: null},\n    'link4' : {type: 'button', handler: null},\n  },\n  'view' : {\n\n  },\n  'code' : {\n\n  },\n  'help' : {\n    'guide' : {type: 'link',   href: \"\"},\n    'forum' : {type: 'link',   href: \"http://www.librogame.net/index.php/forum/forum?id=13\"},\n    'about' : {type: 'button', handler: null},\n  }\n}\n\nconst readFile = (elem, callback) => {\n  // Crea una copia delle info del file\n  const file = elem.files[0]\n  const info = {\n    lastModified: file.lastModified,\n    lastModifiedDate: file.lastModifiedDate,\n    name: file.name,\n    webkitRelativePath: file.webkitRelativePath,\n    size: file.size,\n    type: file.type\n  }\n\n  // Usa un fileReader per leggere il file come testo\n  const reader = new FileReader()\n  reader.onload = () => {\n    callback(info, reader.result)\n    elem.value = ''\n  }\n  reader.readAsText(file);\n}\n\n</script>\n\n<ul>\n  {#each Object.entries(navbar) as [tab, items]}\n  <li class=\"dropdown\">\n    <a href=\"javascript:void(0)\" class=\"dropbtn\">{$_(`navbar.${tab}.title`)}</a>\n    <div class=\"dropdown-content\">\n      {#each Object.entries(items) as [key, item]}\n        {#if item.type === 'button'}\n          <a href=\"javascript:void(0)\"\n          on:click={ () => {item.handler()}}\n          >{$_(`navbar.${tab}.items.${key}`)}</a>\n        {:else if item.type === 'link'}\n          <a href={item.href} target=\"_blank\">{$_(`navbar.${tab}.items.${key}`)}</a>\n        {:else if item.type === 'fileinput'}\n        <input\n          type=\"file\" name=\"file\" id={`${tab}_${key}`}\n          accept=\".xlgc\"\n          on:change={ (e) => readFile(e.srcElement, item.handler)}\n        />\n        <label for={`${tab}_${key}`}>{$_(`navbar.${tab}.items.${key}`)}</label>\n\n        {/if}\n      {/each}\n    </div>\n  </li>\n  {/each}\n</ul>\n\n\n<style>\n\n/*\nbackground-color: var(--navbar-color, #001b31);\ncolor: var(--navbar-color-text, #fff);\n*/\n\ninput[type=file] {\n\twidth: 0.1px;\n\theight: 0.1px;\n\topacity: 0;\n\toverflow: hidden;\n\tposition: absolute;\n\tz-index: -1;\n}\n\nul {\n  font-size: 0.9rem;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  background-color: #333;\n  padding-left: 2.3vw;\n}\n\nli {\n  float: left;\n}\n\n\nli a:hover {\n  background-color: #111;\n}\n\nli a, .dropbtn {\n  display: inline-block;\n  color: white;\n  text-align: center;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n}\n\nli a:hover, .dropdown:hover .dropbtn {\n  background-color: #3978cd;\n}\n\nli.dropdown {\n  display: inline-block;\n}\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 10000;\n}\n\n.dropdown-content a, .dropdown-content label {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n  text-align: left;\n}\n\n.dropdown-content a:hover, .dropdown-content label:hover {\n  background-color: #f1f1f1;\n}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n</style>\n","import {writable} from 'svelte/store'\nimport { encode, decode } from '../utils/xlgcParser.js'\nimport emptyBook from '../tests/1.xlgc' // './empty.xlgc'\n\n\nlet filename = \"empty\"\nlet book = decode(emptyBook)\nconsole.log(book)\n\n\nconst load = (fileName, text) => {\n\n}\n\n\nconst refreshable = (constructor) => {\n  const  { subscribe, set } = writable(constructor());\n  return { subscribe, refresh: () => set(constructor())  }\n}\n\n\nconst entityList  = refreshable(() => Object.keys(book.entities))\nconst chapterList = refreshable(() => Object.keys(book.entities).filter( k => (!book.entities[k].type || book.entities[k].type === 'chapter')))\nconst sectionList = refreshable(() => Object.keys(book.entities).filter( k => book.entities[k].type === 'section'))\n\n\nconst currentEntity = writable(\"1\")\n\nexport {entityList, chapterList, sectionList, currentEntity}\n","/** Questa libreria si occupa di importare/esportare i file di lgc3 usando la\ncodifica json anziché l'xml. Gli oggetti creati sono composti da tre parti:\n- info: contiene i metadati (autore, versione, ...) che in xlgc sono associati all'entità game\n- entities: contiene i paragrafi e le sezioni, i codici e ogni altro dato\n\nA differenza del formato .xlgc, qui i valori vuoti possono essere omessi. Inoltre,\nle entity senza type saranno trattate come 'chapter'\n\nEsempio di come appare un libro codificato come oggetto jlgc:\n{\n  \"info\": {\n    \"title\": \"Esempio\",\n    \"author\": \"Luca Fabbian\"\n  },\n  \"entities\": {\n    \"1\": {\n      \"title\": \"Paragrafo 1\",\n      \"flags\": [\"fixed\", \"death\", \"final\"],\n      \"data\": \"<p> {link 2:@T} o {link intro:Introduzione}</p>\"\n    },\n    \"2\": {\n      \"group\": \"esempio\",\n      \"data\": \"<p></p>\"\n    },\n    \"intro\": {\n      \"type\" : \"section\",\n      \"title\": \"Introduzione\",\n      \"data\": \"<p>Vai al {link 1:@T}\"\n    }\n  },\n}\n\n\n*/\n\n\n\n\n\n/* DECODING\nSi occupa di tradurre da .xlgc -> .jlgc. Attualmente è in grado di effettuare\nuna conversione completa delle funzionalità principali.\n\nStrategia: si parte da una stringa che rappresenta lo scheletro di un file .xlgc\ne la si riempie usando i dati dell'oggetto jlgc */\nconst decode = (xlgc) => {\n  // Crea i tre oggetti che verranno popolati con i dati estratti dal xlgc\n  const info = {}, entities = {}\n\n  // Usa un DOMParser per interpretare il file xml\n  const xmlDoc =  new DOMParser().parseFromString(xlgc,'text/xml')\n  ;[...xmlDoc.documentElement.children].forEach( (entity) => {\n    const id    = entity.getAttribute('name')\n    const type  = entity.getAttribute('type')\n    const group = entity.getAttribute('group')\n\n    // L'entità game è quella contenente i metadati come autore, revisioni, ...\n    // Queste informazioni vengono memorizzate all'interno di info con la stessa chiave\n    if(type === 'entity' && id === 'game'){\n      ;[...entity.children].forEach( (node) => {\n        const nodeName   = node.getAttribute('name')\n        const nodeValue  = node.innerHTML.substring(9, node.innerHTML.length - 3)\n        // Whitelist delle flag riconosciute\n        if([ 'lgc_version', 'title', 'author', 'version', 'revision',\n        'table_of_contents', 'editing_action', 'editing_chapter']\n          .includes(nodeName)) info[nodeName] = nodeValue\n      })\n      return // Termina qui, non aggiunge questa entità a section\n    }\n\n    let section = {}\n    if(group)                     section.group = group\n    if(type && type != 'chapter') section.type = type\n    // Itera i nodi figli dell'entity alla ricerca di flag, titolo e contenuto\n    ;[...entity.children].forEach( (node) => {\n      const nodeName   = node.getAttribute('name')\n      const nodeValue  = node.innerHTML.substring(9, node.innerHTML.length - 3)\n      if(nodeName === 'chapter_title' && section.title) section.title = nodeValue\n      if(nodeName === 'description')   section.data  = nodeValue\n      if(nodeName.startsWith('flag_') && nodeValue === 'true'){\n        if(!section.flags) section.flags = []     // Crea l'array in cui conservare le flag\n        section.flags.push(nodeName.substring(5)) // Aggiunge la flag\n      }\n    })\n    // Inserisce nel jlgc l'oggetto section appena creato\n    entities[id] = section\n  })\n  return {info, entities}\n}\n\n\n\n\n/* ENCODING\nSi occupa di tradurre da .jlgc -> .xlgc. Attualmente è in grado di effettuare\nuna conversione completa delle funzionalità principali.\n\nStrategia: si parte da una stringa che rappresenta lo scheletro di un file .xlgc\ne la si riempie usando i dati dell'oggetto jlgc */\n\n// Crea la sezione \"game\" con i metadati in info\nconst encodeInfo = (info) =>\n`<entity group=\"setup\" name=\"game\" type=\"entity\">` +\n  `<attribute name=\"description\" type=\"string\"><![CDATA[<p></p>]]></attribute>` +\n  `<attribute name=\"chapter_title\" type=\"string\"/>` +\n  `<attribute name=\"lgc_version\" type=\"string\"><![CDATA[${info.lgc_version || ''}]]></attribute>` +\n  `<attribute name=\"title\" type=\"string\"><![CDATA[${info.title || ''}]]></attribute>` +\n  `<attribute name=\"author\" type=\"string\"><![CDATA[${info.author || ''}]]></attribute>` +\n  `<attribute name=\"version\" type=\"string\"><![CDATA[${info.version || ''}]]></attribute>` +\n  `<attribute name=\"revision\" type=\"integer\"><![CDATA[${info.revision || '1'}]]></attribute>` +\n  `<attribute name=\"editing_action\" type=\"string\"><![CDATA[${info.editing_action || 'WRITING'}]]></attribute>` +\n  `<attribute name=\"table_of_contents\" type=\"string\"><![CDATA[${info.table_of_contents || 'P(ALL)'}]]></attribute>` +\n  `<attribute name=\"editing_chapter\" type=\"string\"><![CDATA[${info.editing_chapter || '1'}]]></attribute>` +\n`</entity>`\n\n// Crea una sezione/paragrafo\nconst encodeEntity = (id, entity) => `<entity group=\"${entity.group || ''}\" name=\"${id}\" type=\"${entity.type || 'chapter'}\">` +\n  `<attribute name=\"description\" type=\"string\"><![CDATA[${entity.data || '<p></p>'}]]></attribute>` +\n  `<attribute name=\"chapter_title\" type=\"string\"><![CDATA[${entity.title || ''}]]></attribute>` +\n  `${(entity.type && entity.type !== 'chapter') ? '' :\n    `<attribute name=\"flag_final\" type=\"boolean\"><![CDATA[${(entity.flags && entity.flags.includes('final')) ? 'true' : 'false'}]]></attribute>` +\n    `<attribute name=\"flag_fixed\" type=\"boolean\"><![CDATA[${(entity.flags && entity.flags.includes('fixed')) ? 'true' : 'false'}]]></attribute>` +\n    `<attribute name=\"flag_death\" type=\"boolean\"><![CDATA[${(entity.flags && entity.flags.includes('death')) ? 'true' : 'false'}]]></attribute>`\n  }` +\n`</entity>`\n\n// Codifica il libro\nconst encode = (jlgc) => `<?xml version=\"1.0\" encoding=\"UTF-8\"?><entities>${\n  encodeInfo(jlgc.info) +\n  Object.entries(jlgc.entities).reduce((acc, curr) => acc + encodeEntity(...curr), '')\n}</entities>`\n\n\n/* Esporta solo le due funzioni per la decodifica/codifica */\nexport {decode, encode}\n","<script>\n  import Tabbar from './Tabbar.svelte'\n\n  import { encode, decode } from '../utils/xlgcParser.js'\n  import { currentEntity, chapterList, sectionList } from '../store/book.js'\n\n  const tabs = {\n    book: 'Libro',\n    code: 'Code'\n  }\n\n  const open = (entity) => {\n    currentEntity.set(entity)\n  }\n</script>\n\n<section class=\"sidemenu\">\n  <Tabbar {tabs}/>\n  <div class=\"sidemenu-container\">\n    <h1>Paragrafi</h1>\n    {#each $chapterList as entity }\n      <div\n      class:selected={entity == $currentEntity}\n      on:click={ () => open(entity)}\n      >{entity}</div>\n    {/each}\n    <h1>Sezioni</h1>\n    {#each $sectionList as entity }\n      <div\n      class:selected={entity == $currentEntity}\n      on:click={ () => open(entity)}\n      >{entity}</div>\n    {/each}\n  </div>\n</section>\n\n<style>\n:global(.sidemenu-container){\n  overflow-y: scroll;\n  height: 100%;\n  padding-bottom: 5rem;\n  box-sizing: border-box;\n}\n:global(section.sidemenu){\n  flex-grow: 0;\n  flex-basis: auto;\n  width: 200px;\n}\n\n:global(.sidemenu-container div){\n  box-sizing: border-box;\n  padding: 0.3rem;\n  padding-left: 1rem;\n}\n\n:global(.sidemenu-container div:hover){\n  background-color: #eee;\n}\n\n:global(.sidemenu-container div.selected){\n  background-color: #cbdcf2;\n}\n\n:global(.sidemenu-container h1){\n  font-weight: 700;\n  font-size: 1rem;\n  box-sizing: border-box;\n  padding: 0.6rem;\n  padding-top: 1.3rem;\n  padding-left: 1rem;\n  margin: 0;\n}\n</style>\n","<script>\n  import { Navbar, Sidemenu, Editor, DevPanel } from './components/*.svelte';\n  import { addMessages, init } from 'svelte-i18n'\n\n  import en from \"./languages/en.toml\"\n  addMessages('en', en)\n  init({\n    fallbackLocale: 'en',\n    initialLocale: 'en',\n  })\n\n</script>\n<style>\n:global(body, html) {\n  overflow-y: hidden;\n  margin: 0;\n  padding: 0;\n}\n\n:global(main){\n  height: calc(100vh - 2.3rem);\n  padding: 2.5px;\n  padding-bottom: 1.6rem;\n  display: flex;\n  background-color: var(--color-background, #bbcee8);\n  box-sizing: border-box;\n}\n\n:global(main > *){\n  display: flex;\n  flex-direction:column;\n  box-sizing: border-box;\n  margin:3px;\n  border-radius: 2px;\n  border: 1px solid grey;\n  background-color: var(--color-section, #fff);\n}\n\n</style>\n<Navbar/>\n\n<main>\n  <Sidemenu/>\n  <Editor/>\n  <DevPanel/>\n</main>\n","import App from './App.svelte';\n\n// Export app\nexport default new App({\n  target: document.body\n})\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","seen_callbacks","Set","shift","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","fill","make_dirty","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","fontSize","foreground","editor","ace","edit","setOptions","tabSize","useSoftTabs","setTheme","session","setMode","focus","entries","tabs","london","to","paris","active","keys","expandable","key","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","TYPE","isLiteralElement","el","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isNumberSkeleton","isDateTimeSkeleton","extendStatics","__extends","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","prototype","__assign","assign","t","n","arguments","call","apply","SyntaxError","_super","message","expected","found","location","_this","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","escapedParts","parts","part","inverted","description","expected1","j","descriptions","sort","slice","join","describeExpected","found1","pegParse","input","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c5","peg$otherExpectation","peg$c7","peg$c9","peg$c11","peg$c12","peg$c13","peg$classExpectation","peg$c14","peg$c15","peg$c17","peg$c19","peg$c23","peg$c26","style","messageCtx","peg$c28","peg$c30","peg$c31","insertLocation","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c54","peg$c57","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c71","peg$c74","peg$c76","peg$c79","x","isInPluralOption","peg$c81","peg$c83","peg$c84","peg$c86","peg$c88","peg$c89","peg$c90","peg$c91","peg$c93","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","error","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$parsemessage","s0","s1","peg$parsemessageElement","peg$parsemessageText","messageText","peg$parseliteralElement","s3","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","s2","peg$parsenumberSkeletonToken","tokens","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","reduce","all","_a","id","optionLocation","peg$c52","peg$parsepluralElement","peg$parseselectOption","peg$c55","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenumberSkeletonId","s4","peg$parsewhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c20","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$c82","peg$parseescapedChar","parseInt","captureLocation","__spreadArrays","il","r","k","jl","PLURAL_HASHTAG_REGEX","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","match","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","opt","signOpts","convertNumberSkeletonToNumberFormatOptions","_i","tokens_1","token","currency","useGrouping","maximumFractionDigits","unit","notation","compactDisplay","currencyDisplay","unitDisplay","minimumFractionDigits","parse","opts","els","normalizeHashtagInPlural","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","getCacheId","inputs","JSON","stringify","obj","domParser","memoizeFormatConstructor","FormatConstructor","cache","args","cacheId","format","bind","FormatError","msg","variableId","formatToParts","locales","formatters","formats","currentPluralValue","originalMessage","els_1","getNumberFormat","varName","String","getDateTimeFormat","other","Intl","PluralRules","rule","getPluralRules","lastPart","TOKEN_REGEX","counter","restoreRichPlaceholderMessage","objectParts","split","Boolean","SIMPLE_XML_REGEX","TEMPLATE_ID","Date","now","VOID_ELEMENTS","formatHTMLMessage","formattedMessage","DOMParser","content","parseFromString","getElementById","tagsToFormat","getElementsByTagName","caseSensitiveTags","tagName","toLowerCase","child","concat","formatHTMLElement","outerHTML","textContent","isVoidElement","formatFnOrValue","chunks","mergeConfigs","defaultConfig","configs","c1","c2","IntlMessageFormat","overrideFormats","defaultLocale","formatterCache","dateTime","pluralRules","formatToString","ast","resolvedOptions","locale","NumberFormat","supportedLocalesOf","getAst","__parse","TypeError","memoizeIntlConstructor","DateTimeFormat","percent","short","medium","long","full","e","u","getOwnPropertySymbols","propertyIsEnumerable","f","fallbackLocale","initialLocale","loadingDelay","scientific","engineering","compactLong","compactShort","warnOnMissingMessages","g","E","reverse","some","h","v","L","lastIndexOf","$","window","documentElement","D","setTimeout","default","clearTimeout","y","F","Z","J","U","q","z","K","Q","C","console","warn","R","H","V","G","W","B","X","iframe","refreshIFrame","contentDocument","open","write","close","emulator","status","Quill","clickHandler","Link","import","super","title","nodeValue","domNode","blotName","register","highlight","on","getText","lastSearchedIndex","formatText","onTextUpdate","delta","oldDelta","source","startHighlighting","stopHighlighting","off","linkHighlighter","LinkHighlighter","log","hljs","configure","languages","modules","syntax","toolbar","list","header","color","background","font","align","theme","quillGetHTML","inputDelta","getContents","tempQuill","setContents","root","innerHTML","esp1","esp2","download","filename","encodeURIComponent","display","body","click","href","readFile","elem","file","files","info","lastModified","lastModifiedDate","webkitRelativePath","size","reader","FileReader","onload","readAsText","new","accept","save","link1","link2","link4","view","code","help","guide","forum","about","item","srcElement","book","xlgc","entities","entity","group","nodeName","includes","section","startsWith","flags","decode","refreshable","refresh","chapterList","sectionList","currentEntity","addMessages","en"],"mappings":"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"}